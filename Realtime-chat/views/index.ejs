<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/users.css" />
    <link rel="stylesheet" href="/styles.css" />
    <title>Chat</title>
  </head>
  <body>
    <%- include("navbar",{user:user}) %>

    <!-- Display Vendor Name -->
    <h1 class="head">Vendors</h1>
    <div class="user-list">
      <% users.forEach(user => { %>
      <div class="user">
        <%= user.name %>
        <button class="btn" name="receiverId" data-user-id="<%= user._id %>">
          chat now
        </button>
      </div>

      <% }); %>
    </div>

    <!-- Display Chat Box -->
    <div class="Container" id="container">
      <div class="chat-container" id="chat-container">
        <form
          class="input-container"
          id="messageForm"
          method="post"
          action="/index"
        >
          <input type="hidden" name="senderId" value="<%= user._id %>" />
          <input type="hidden" name="receiverId" />
          <input
            type="text"
            name="content"
            placeholder="text now..."
            required
          />
          <button type="submit">Send</button>
        </form>
      </div>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const container = document.getElementById("container");
        const chatButtons = document.querySelectorAll(".btn");
        const receiverIdInput = document.querySelector(
          'input[name="receiverId"]'
        );
        // Hide the container initially
        container.style.display = "none";

        chatButtons.forEach((button) => {
          button.addEventListener("click", function (event) {
            // Show the container when a chat button is clicked
            container.style.display = "block";
            // Set the userId in the hidden input field
            const userId = this.getAttribute("data-user-id");
            receiverIdInput.value = userId;
          });
        });

        const messageForm = document.getElementById("messageForm");
        messageForm.addEventListener("submit", function (event) {
          event.preventDefault();

          const formData = new FormData(messageForm);
          const data = Object.fromEntries(formData.entries());

          fetch("/index", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
          })
            .then((response) => response.json())
            .then((data) => {
              console.log("Success:", data);
              // Optionally clear the input field or show a success message
              messageForm.reset();
            })
            .catch((error) => {
              console.error("Error:", error);
            });
        });
      });
    </script>
  </body>
</html>
